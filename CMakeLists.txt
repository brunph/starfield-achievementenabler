# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(starfield-achievementenabler)

# Target: starfield-achievementenabler
set(starfield-achievementenabler_SOURCES
	"src/CommonIncludes.cpp"
	"src/Main.cpp"
	"src/memory/MemoryPatch.cpp"
	"src/CommonIncludes.hpp"
	"src/memory/ByteArray.hpp"
	"src/memory/Include.hpp"
	"src/memory/Memory.hpp"
	"src/memory/MemoryPatch.hpp"
	"src/util/Log.hpp"
	cmake.toml
)

add_library(starfield-achievementenabler SHARED)

target_sources(starfield-achievementenabler PRIVATE ${starfield-achievementenabler_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${starfield-achievementenabler_SOURCES})

target_compile_features(starfield-achievementenabler PUBLIC
	cxx_std_20
)

target_precompile_headers(starfield-achievementenabler PUBLIC
	"src/CommonIncludes.hpp"
)

